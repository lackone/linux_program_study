#include <iostream>

using namespace std;

//TCP/IP协议族体系结构
//TCP/IP是一个四层协议系统，自底向上，分别是数据链路层，网络层，传输层，应用层。

//数据链路层
//实现了网卡接口的网络驱动程序，以处理数据在物理媒介上的传输。
//链路层最常用的ARP和RARP，实现了IP地址和机器物理地址之间的相互转换。

//网络层
//实现数据包的选路和转发
//网络层最核心的协议IP协议，IP协议根据数据包的目的IP地址来决定如何投递。
//ICMP协议，主要用于检测网络连接

//传输层
//为两台主机提供端到端的通信
//主要有3个：TCP协议，UDP协议，SCTP协议
//TCP为应用层提供可靠的，面向连接的，基于流的服务。基于流的数据没有边界（长度）限制。
//UDP为应用层提供不可靠，无连接，基于数据报的服务。UDP数据报都有一个长度
//SCTP为因特网上传输电话信号而设计的

//应用层
//负责处理应用程序的逻辑
//ping应用程序，检测网络连接
//telnet，远程登录协议
//ospf，动态路由更新协议，用于路由器之间的通信
//dns，提供机器域名到IP地址的转换

//ARP协议工作原理
//主机向自已所在的网络广播一个ARP请求，请求包含目标机器的网络地址，网络上的其他机器都将收到这个请求，只有被请求的目标机器会回应一个ARP应答。

//ARP高速缓存的查看和修改
//arp -a
//arp -d 192.168.1.4  删除ARP缓存
//arp -s 192.168.1.4 d8:bb:c1:c6:67:3e  添加ARP缓存

//DNS工作原理
//linux下使用 /etc/resolv.conf 文件存放DNS服务器的IP地址。
//host -t A www.baidu.com

//socket和TCP/IP协议族的关系
//由socket定义的这一组API提供如下两点功能：
//1、将应用程序数据从用户缓冲区复制到TCP/UDP内核发送缓冲区，以交付内核来发送数据，或者从内核TCP/UDP接收缓冲区中复制数据到用户缓冲区，以读取数据。
//2、应用程序可以通过它们来修改内核中各层协议的某些头部信息或其他数据结构，从而精细地控制底层通信的行为。

int main() {
    return 0;
}
